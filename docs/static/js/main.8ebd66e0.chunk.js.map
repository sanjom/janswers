{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PROMPT","getAnswer","answer","App","React","useState","question","setQuestion","secret","setSecret","isAnswerVisible","setAnswerVisible","split","prompt","substring","length","isButtonDisabled","className","value","onChange","e","target","disabled","newPart","newSecret","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAGMA,EAAS,2CAETC,EAAY,SAACC,GAAD,OAAYA,GAAU,mCAyEzBC,EAvEH,WAAO,IAAD,EACgBC,IAAMC,SAAS,IAD/B,mBACTC,EADS,KACCC,EADD,OAEYH,IAAMC,SAAS,IAF3B,mBAETG,EAFS,KAEDC,EAFC,OAI4BL,IAAMC,UAAS,GAJ3C,mBAITK,EAJS,KAIQC,EAJR,KAMVT,EAASM,EAAOI,MAAM,KAAK,GAC3BC,EACuB,MAA3BL,EAAOM,UAAU,EAAG,GAChBd,EAAOc,UAAU,EAAGN,EAAOO,QAC3BP,EACAQ,GAAoBV,GAAYO,IAAWb,EAmBjD,OACE,sBAAKiB,UAAU,MAAf,UACE,sDACA,uBACEA,UAAU,YACVC,MAAOZ,EACPa,SAjBuB,SAACC,GAC5Bb,EAAYa,EAAEC,OAAOH,QAiBjBI,SAAUZ,IAEZ,6CAAgBV,EAAhB,OACA,uBACEiB,UAAU,YACVC,MAAOL,EACPM,SApBqB,SAACC,GAAO,IACzBF,EAAUE,EAAEC,OAAZH,MACFK,EAAUL,EAAMJ,UAAUN,EAAOO,QACjCS,EAAY,UAAGhB,GAAH,OAAYe,GAAUT,UAAU,EAAGI,EAAMH,QAC3DN,EAAUe,IAiBNF,SAAUZ,IAEVA,EASA,wBAAQO,UAAU,aAAaQ,QA1CjB,WAClBlB,EAAY,IACZE,EAAU,IACVE,GAAiB,IAuCb,kCARA,wBACEM,UAAU,aACVQ,QAAS,kBAAMd,GAAiB,IAChCW,SAAUN,EAHZ,4BAYF,sBAAMC,UAAU,aAAhB,SACGP,GACC,gCACE,2CACA,0CAAWT,EAAUC,eC1DlBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8ebd66e0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst PROMPT = \"J, please answer the following question:\";\n\nconst getAnswer = (answer) => answer || \"Error - Stupid person detected!\";\n\nconst App = () => {\n  const [question, setQuestion] = React.useState(\"\");\n  const [secret, setSecret] = React.useState(\"\");\n\n  const [isAnswerVisible, setAnswerVisible] = React.useState(false);\n\n  const answer = secret.split(\".\")[1];\n  const prompt =\n    secret.substring(0, 1) === \".\"\n      ? PROMPT.substring(0, secret.length)\n      : secret;\n  const isButtonDisabled = !question || prompt !== PROMPT;\n\n  const handleClear = () => {\n    setQuestion(\"\");\n    setSecret(\"\");\n    setAnswerVisible(false);\n  };\n\n  const handleQuestionChange = (e) => {\n    setQuestion(e.target.value);\n  };\n\n  const handlePromptChange = (e) => {\n    const { value } = e.target;\n    const newPart = value.substring(secret.length);\n    const newSecret = `${secret}${newPart}`.substring(0, value.length);\n    setSecret(newSecret);\n  };\n\n  return (\n    <div className=\"App\">\n      <p>What's your question?</p>\n      <input\n        className=\"App-input\"\n        value={question}\n        onChange={handleQuestionChange}\n        disabled={isAnswerVisible}\n      />\n      <p>Now, write \"{PROMPT}\"</p>\n      <input\n        className=\"App-input\"\n        value={prompt}\n        onChange={handlePromptChange}\n        disabled={isAnswerVisible}\n      />\n      {!isAnswerVisible ? (\n        <button\n          className=\"App-button\"\n          onClick={() => setAnswerVisible(true)}\n          disabled={isButtonDisabled}\n        >\n          Get the Answer\n        </button>\n      ) : (\n        <button className=\"App-button\" onClick={handleClear}>\n          Ask another question\n        </button>\n      )}\n      <span className=\"App-answer\">\n        {isAnswerVisible && (\n          <div>\n            <span>Answer:</span>\n            <span>{` ${getAnswer(answer)}`}</span>\n          </div>\n        )}\n      </span>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}